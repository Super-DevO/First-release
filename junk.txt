https://first-release.herokuapp.com/
first video
https://youtu.be/owqn7ompRpE

<%= surveys[0].Name %>
<%= surveys[0].Author %>
<%= surveys[0].Description %>

 <button type="button" href="/slanding/<%= surveys[count]._id %>" class="btn btn-sm btn-outline-secondary">View</button>
                <button type="button" href="/edit/<%= surveys[count]._id %>" class="btn btn-sm btn-outline-secondary">Edit</button>
                <button type="button" href="/delete/<%= surveys[count]._id %>" class="btn btn-sm btn-outline-secondary">Delete</button>
              

    Survey.findById(survey, function (err, locSurv) {
        if(err){
            res.render(err);
        } else {
            console.log(locSurv);
            res.render('TakeSurvey', { title: 'TakeSurvey', locSurv: locSurv });
        }
    })

</div>
        <div class="row">
          <div class="col-md-offset-1 col-md-10">
            
            <!-- ------------------------ -->
            <!-- FIX THE ADD BUTTON BELOW -->
            <!-- ------------------------ -->
            <hr>
            <br>
            <div class="table-responsive">
              <table class="table table-bordered table-striped table-hover">
                <thead>
                  <tr>
                    <th>Title</th>
                    <th class="text-center">Price</th>
                    <th class="text-center">Author</th>
                    <th class="text-center">Genre</th>
                    <th class="text-center">Edit</th>
                    <th class="text-center">Delete</th>
                  </tr>
                  </thead>
                  <tbody>
                  <!-- Template Row -->
   
                  <tr>
                    <td>some stufff</td>
                    <td class="text-center">books</td>
                    <td class="text-center">books</td>
                    <td class="text-center">books</td>
  
                    <td class="text-center">
                      <a href="/books/edit/" class="btn btn-primary btn-sm">
                        <i class="fas fa-pencil-alt"></i> Edit</a>
                    </td>
  
                    <td class="text-center">
                      <a href="/books/delete/" class="btn btn-danger btn-sm">
                        <i class="fas fa-trash-alt"></i> Delete</a>
                    </td>
                  </tr>
                  
                </tbody>
              </table>
            </div>
             <div class="col-md-offset-1 col-md-10 text-center">
              <ul class="pagination pagination-lg pager" id="myPager"></ul>
            </div>
          </div>
deleteQuestion
http://localhost:3000/deleteQuestion

console.log(req.params.id);
    console.log(req.params.integer);
    let ID = req.params.id;
/<%= survey._id %>-<%= count %>
"/edit/<%= surveys[count]._id %>"


    /*console.log(req.params.id);
    console.log(req.params.integer);
    let ID = req.params.id;
    console.log(req.params.id);
    let id = req.params.id;
    let newArray = [Question];
    let index = id.split("-", 2);
    console.log(index[0]);

    Survey.findById(index[0], function (err, locSurv) {
        if(err){
            res.render(err);
        } else {
            console.log(locSurv);
            for(let i = 0; i < locSurv.quearray.length; i++){
                if(i != index[1]){
                    newArray.push(locSurv.quearray[i]);
                } else {
                    console.log('deleted question' + index[1]);
                }
            }
            locSurv.quearray = newArray;
            res.render('edit', { title: 'Edit Your Survey', survey: locSurv });
        }
    });*/
 /*   Survey.remove({_id: ID}, (err) => {
        if(err)
        {
            console.log(err);
            res.end(err);
        }
        else
        {
             // refresh the book list
             res.redirect('/ylist');
        }
    });*/

    //res.render('edit', { title: 'Your Edit', survey: ID });
    //res.render('edit', { title: 'Edit Your Survey', survey: currentSurvey });
    //res.render('edit/:' + ID, { title: 'Survey' });
   // res.render('/', { title: 'Edit Your Survey' });

 /*   Survey.findById(ID, function (err, locSurv) {
        if(err){
            console.log('no survey found');
            res.render(err);
        } else {
            console.log(locSurv.quearray[req.params.integer]);
            res.render('/ylist', { title: 'Your Surveys' });
        }
    })*/


<p>Survey: <%- survey.Name %></p>
      <p>Genera: <%- survey.Genera %></p>
      <p>Author: <%- survey.Author %></p>
      <p>Desc: <%- survey.Description %></p>
      <p>Type: <%- survey.Type %></p>

<div id="mySidebar" class="sidebar">
    <a href="javascript:void(0)" class="closebtn" onclick="closeNav()">&times;</a>
    <a href="#">Title of Survey</a>
    <hr id="brighten">
    <a href="#">Brief Summary of Survey</a>
    <hr id="brighten">
    <a href="#">controls for page</a>
    <hr id="brighten">
    <a href="#">Contact info</a>
  </div>
  
  <div id="main">
    <button class="openbtn" onclick="openNav()">&#9776; Open info</button>
    <h2>This could be one of our surveys when taking it</h2>
    <div class=stage>

 <div class=question>
                <table style="text-align:center; margin:15px">
                    <tr>
                        <td><img src="/Assets/images/Pic1(1)-slim.jpg" alt="purple" height=90% width=90% styles="display:block margin:auto "> </td>
                    </tr>
                    <tr>
                        <td>Question Can go here</td>
                    </tr>
                </table>
                <hr>
            </div>

module.exports.processNewSurvey = (req, res, next) => {
    //console.log(req.body.Name);
    let newSurvey = Survey({
        "Name": req.body.Name,
        "Author": req.body.Author,
        "Description": req.body.Description,
        "Type": req.body.surveyType
       // "quearray": null
    });
    //TODO: verify that the name is not in use already
    //TODO: differentiate that the correct user can only see their surveys
    let que = req.query;
    console.log(que);
    console.log(req.body);
    Survey.create(newSurvey, (err, Survey) => {
        if(err)
        {
            console.log(err);
            res.end(err);
        } else 
        {
            let name = req.body.Name;
            if(req.body.surveyType == 1)
            {
                res.redirect(url.format({
                    pathname: '/survey_question/' + req.body.Name
                }));
            }
            else if(req.body.surveyType == 2)
            {
                res.redirect(url.format({
                    pathname: '/survey_question2/' + req.body.Name
                }));
            }
            else if(req.body.surveyType == 3)
            {
                res.redirect(url.format({
                    pathname: '/survey_question3/' + req.body.Name
                }));
            }
        }
    });

}

let newQuestion = Question({
        "question": req.body.Question,
        "optA": req.body.optA,
        "optB": req.body.optB,
        "optC": req.body.optC,
        "optD": req.body.optD
    });

http://localhost:3000/delete/
http://localhost:3000/delete/5fc7bff7dddd3f4824b1b15a
http://localhost:3000/delete/5fc16ddb63f08137183d13b1
http://localhost:3000/results1/5fc16ddb63f08137183d13b1
http://localhost:3000/results1/5fc7bff7dddd3f4824b1b15a
http://localhost:3000/deleteQuestion/5fc080c1cbd2c800173573c1
http://localhost:3000/delete/5fc16cba7b280233c0ed16c9
http://localhost:3000/editQuestion/5fc7f1f2811e87183487ec3c-0

<% for(let i = 0; i < RespList.length; i++) { %><!--however many questions-->
              <% for(let j = 0; j < RespList[j].length; j++) { %>
                <%= RespList[j] %><br>
              <% } %>
            <% } %>


-from html
/edit/<%= surveys[count]._id %>

 <button class="btn btn-primary" type="submit">


<a href="/editQuestion/<%= locSurv._id %>-<%= count %>" class="btn btn-primary btn-sm" type="submit"></a>
                          <i class="fas fa-pencil-alt"></i> Edit</a>   



<a href="/editQuestion/<%= locSurv._id %>-<%= count %>" class="btn btn-primary btn-sm" type="submit"></a>
                            <i class="fas fa-pencil-alt"></i> Edit</a>
 <a href="/editQuestion/<%= locSurv._id %>-<%= count %>" class="btn btn-primary btn-sm" type="submit"></a>
                            <i class="fas fa-pencil-alt"></i> Edit</a>

console.log(locSurv.quearray[indexNum]);
            
            let questID = locSurv.quearray[indexNum]._id;
            console.log('question ID: ' + questID);
            /*get the question id
            NestQuest.findById(questID, function(err, locQuest) {
                if(err){
                    res.render(err);
                } else {
                    console.log('local Question: ' + locQuest);
                    res.render('edit', { title: 'Edit Question', locSurv: locSurv });
                }
            });*/

module.exports.deleteQuestion = (req, res, next) => {
    console.log(req.params.id);
    let id = req.params.id;

    let index = id.split("-", 2);
    let indexNum = index[1];
    console.log(index[0]);//the survey ID

    let questID;
    Survey.findById(index[0], function (err, locSurv) {
        if(err){
            res.render(err);
        } else {
            //first call survey.update then in that we call deleteOne
            console.log(locSurv.quearray);
            questID = locSurv.quearry[indexNum]._id;
            console.log("the one to delete: " + questID);
            NestQuest.deleteOne({_id: locSurv.quearray[indexNum].id}, (err) => {
                if(err)
                {
                    console.log(err);
                    res.end(err);
                }
                else
                {
                    // call the updateOne function
                    Survey.findById(index[0], function (err, locSurv) {
                        if(err){
                            res.render(err);
                        } else {
                            console.log(locSurv);

                        }
                });
            //locSurv.quearray[indexNum].question = "Next Question";
            res.render('edit', { title: 'Edit Your Survey', locSurv: locSurv });
        }
    });

 Survey.updateOne({_id: surveyID}, locSurv, (err) => {
                        if(err)
                        {
                            console.log(err);
                            res.end(err);
                        }
                        else
                        {
                            //cannot set headers 
                            res.redirect('/edit/' + surveyID);
                        }
                    });*/

   /*does not work 
   NestQuest.deleteOne({_id: locSurv.quearray[indexNum].id}, (err) => {
        if(err)
        {
            console.log(err);
            res.end(err);
        }
        else
        {
            // refresh the book list
            res.redirect('/edit' + locSurv._id);
        }

    });*/


}   

/*let mongoose = require('mongoose');
//const AutoIncrement = require('mongoose-sequence')(mongoose);

let TestSchema = mongoose.Schema({
    _id: Number,
    name: String
}
//,{_id: false }
);
 
//TestSchema.plugin(AutoIncrement);
module.exports.mongoose.model('test', TestSchema);*/

http://localhost:3000/survey_question/MC%20Surevey
http://localhost:3000/edit/202
http://localhost:3000/edit2/202
http://localhost:3000/edit2/202

 //console.log(locSurv.quearray[indexNum].id);
           /* Question.updateOne({_id: locSurv.quearry[indexNum]._id}, updatedQuestion, (err) => {
                if(err)
                {
                    return console.error(err);
                }
                else
                {
                    console.log(rs'worked');
                }
            });*/

processNewSurvey - where we get the drop down pulls from
req.body.surveyType - is what it is called in the html
    question: String,
    qid: String,
    radio: String

sid: String,
    Name: String,
    Author: String,

    resparray: [response2Model]
question: String,
    qid: Number,
    radio: Number

